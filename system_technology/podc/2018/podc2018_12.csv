Session details: Session 3A: Congest,No abstract available.
Sublinear-Time Quantum Computation of the Diameter in CONGEST Networks,"The computation of the diameter is one of the most central problems in distributed computation. In the standard CONGEST model, in which two adjacent nodes can exchange O(log n) bits per round (here n denotes the number of nodes of the network), it is known that exact computation of the diameter requires Ω(n) rounds, even in networks with constant diameter. In this paper we investigate quantum distributed algorithms for this problem in the quantum CONGEST model, where two adjacent nodes can exchange O(log n) quantum bits per round. Our main result is a O(√D )-round quantum distributed algorithm for exact diameter computation, where D denotes the diameter. This shows a separation between the computational power of quantum and classical algorithms in the CONGEST model. We also show an unconditional lower bound Ω(√ ) on the round complexity of any quantum algorithm computing the diameter, and furthermore show a tight lower bound Ω(√D ) for any distributed quantum algorithm in which each node can use only poly(log n) quantum bits of memory."
Property Testing of Planarity in the CONGEST model,"We give a distributed algorithm in the \sf CONGEST model for property testing of planarity with one-sided error in general (unbounded-degree) graphs. Following Censor-Hillel et al. (DISC 2016), who recently initiated the study of property testing in the distributed setting, our algorithm gives the following guarantee: For a graph G = (V,E) and a distance parameter ε, if G is planar, then every node outputs \sf accept, and if G is ε-far from being planar (i.e., more than ε\cdot |E| edges need to be removed in order to make G planar), then with probability 1-1/\rm poly (n) at least one node outputs \sf reject. The algorithm runs in O(log|V|\cdot\poly(1/ε)) rounds, and we show that this result is tight in terms of the dependence on |V|. Our algorithm combines several techniques of graph partitioning and local verification of planar embeddings. Furthermore, we show how a main subroutine in our algorithm can be applied to derive additional results for property testing of cycle-freeness and bipartiteness, as well as the construction of spanners, in minor-free (unweighted) graphs."
Congested Clique Algorithms for the Minimum Cut Problem,"We provide three different approaches to the minimum cut problem in the congested clique model of distributed computing. In this model, n nodes of the graph, each of which knows its own edges, can communicate in synchronous rounds; per round each node can send B-bits to each other node, where typically B=O(log n). At the end, each node should know its own part of the output, e.g., which side of the cut it is on. Our first algorithm is an O(1) round algorithm that finds a 1+o(1) approximation of the minimum cut. If the min-cut size is O(n^1/3 ), the algorithm finds an exact min-cut. This algorithm combines Karger's random sampling and his contraction algorithm; Nagamochi--Ibaraki--Nishizeki--Poljak's k--connectivity certificates; and Ahn--Guha--McGregor's algorithm for finding those certificates in the streaming model. To get an efficient implementation, we provide an algorithm that can solve simultaneously polynomially many instances of the MST problem in O(1) rounds. Our second algorithm is an O(log^3 n) round exact algorithm, based on the Karger-Stein approach. Its time complexity improves when larger messages are allowed. To implement this algorithm we present a general method to perform divide and conquer algorithms in the congested clique model. Our third algorithm is an O(log^2 n) round exact algorithm based on Karger's state of the art sequential exact min-cut algorithm, which works via tree-packing."
